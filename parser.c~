#define _GNU_SOURCE

#include "parser.h"

LinkedIndexObjListPtr readld(char *file_name) {
  FILE* to_open;
  char *line;
  size_t len = 0;
  int read;
  LinkedIndexObjListPtr list = create(); 

  //Variable used in logic checking for malformed File
  //int open_tag = 0;

  to_open = fopen(file_name, "r");

  if(to_open == NULL) {
    printf("File not found!\n");
    return NULL;
  }

  while((read = getline(&line, &len, to_open)) != -1) {

    #ifdef DEBUG
    printf("%s\n", line);
    //If the tag is closed
    #endif
      //tokenize the line, get the second token
    char *token = strtok(line, " \n");
     
    while(token != NULL) {
      if(strcmp("<list>", token) != 0 && strcmp("</list>", token) != 0 && strlen(token) > 0) {

	char buff[strlen(token) + 1];
	strcpy(buff, token);

	char *tok_add = malloc((strlen(buff) + 1) * sizeof(char));
	strcpy(tok_add, buff);

	IndexObjPtr to_add = create_index(tok_add, "");
	to_add->file_list = create_file_index_list();

	char *second_line;

	while((read = getline(&second_line, &len, to_open)) != -1 && strcmp("</list>\n", second_line) != 0) {
	
	  #ifdef DEBUG
	  printf("Second Line: %s\n", second_line);
	  #endif
	  if(strcmp("\n", second_line) != 0) {
	  char *token2 = strtok(second_line, " \n");

	  while(token2 != NULL) {
	    #ifdef DEBUG
	    printf("Second Token: %s\n", token2);
	    #endif

	    if(strlen(token2) > 0) {
	      char buff2[strlen(token2) + 1];
	      strcpy(buff2, token2);
	      
	      char *tok2_add = malloc((strlen(buff2) + 1) * sizeof(char));
	      strcpy(tok2_add, buff2);

	    addFileIndex(to_add->file_list, tok2_add);

	    }
	    token2 = strtok(NULL, " \n");
	    token2 = strtok(NULL, " \n");
	  }
	  }  
	} /*else {
	  printf("Malformed File\n");
	  return;
	}*/

	
	insert_index(list, to_add);

	
      }

      token = strtok(NULL, " \n");
    }
    
  }


  return list;
}
